# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        go: ['1.22', '1.23']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go v${{ matrix.go }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go }}

    - name: Prepare for Testing
      run: go install github.com/ctrf-io/go-ctrf-json-reporter/cmd/go-ctrf-json-reporter@latest

    - name: Test
      run: |
        mkdir -p test-results
        go test -json ./... | go-ctrf-json-reporter \
          -output test-results/ctrf-report-${{ matrix.go }}.json

    - name: Publish Test Results
      uses: ctrf-io/github-test-reporter@v1
      with:
        report-path: "./test-results/ctrf-report-${{ matrix.go }}.json"
        summary-report: true
        skipped-report: true
        failed-folded-report: true

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Test Results (Go ${{ matrix.go }})
        path: test-results/*.json

  publish-test-results:
    name: "Publish Test Results Summary"
    needs: test
    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write

    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish Test Results
        uses: ctrf-io/github-test-reporter@v1
        with:
          report-path: "artifacts/**/*.json"
          summary-report: true
          skipped-report: true
          failed-folded-report: true


  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.23'

    - name: Build
      run: go build -v ./...

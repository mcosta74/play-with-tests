# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  checks: write
  pull-requests: write

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -v ./...

    - name: Prepare for Testing
      run: go install gotest.tools/gotestsum@latest

    - name: Test
      run: |
        gotestsum --format short-verbose \
          --junitfile junit.xml

    # --junitfile-testsuite-name full \
    # --junitfile-testcase-classname relative \

    # - name: Test Report
    #   uses: dorny/test-reporter@v1
    #   if: always()    # run this step even if previous step failed
    #   with:
    #     name: Go Tests            # Name of the check run which will be created
    #     path: junit.xml    # Path to test results
    #     reporter: jest-junit        # Format of test results

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          junit.xml
